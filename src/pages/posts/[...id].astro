---
import { HIDE_SEED_IN_PROD, STATE_EMOJI } from "@/constants";
import { getCollection } from "astro:content";
import Prose from "@/layouts/Prose.astro";
import RootLayout from "@/layouts/RootLayout.astro";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import { render } from "astro:content";

dayjs.extend(utc);

export async function getStaticPaths() {
	const blogEntries = await getCollection(
		"blog",
		(entry) => !(import.meta.env.PROD && HIDE_SEED_IN_PROD && entry.data.growth === "seed")
	);
	return blogEntries.map((entry) => ({
		params: { id: entry.id },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter: frontmatter, headings } = await render(entry);

const lastModified = dayjs(frontmatter.lastModified || entry.data.date)
	.utc()
	.format("DD/MM/YYYY");
---

<RootLayout
	path={`/posts/${entry.id}`}
	title={entry.data.title}
	description={entry.data.description}
	toc={headings}
>
	<Prose>
		<h1>{entry.data.title}</h1>
		<p class="text-muted-foreground text[1em]">{entry.data.description}</p>
		<p class="text-muted-foreground">
			{lastModified} · {frontmatter.minutesRead} · <a
				href={`/growths/${entry.data.growth}`}
				class="no-underline bg-accent text-accent-foreground px-2 py-1 rounded-md w-fit text-sm whitespace-nowrap"
				>{entry.data.growth} {STATE_EMOJI[entry.data.growth]}</a
			>
		</p>
		<div class="flex gap-2">
			{
				entry.data.tags.map((tag) => (
					<>
						<a
							href={`/tags/${tag}`}
							class="inline-block bg-accent text-accent-foreground px-2 py-1 rounded-md text-sm"
						>
							{tag}
						</a>{" "}
					</>
				))
			}
		</div>

		<Content />
	</Prose>
</RootLayout>

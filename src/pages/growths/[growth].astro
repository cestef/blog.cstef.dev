---
import { GrowthSchema } from "@/content/config";
import RootLayout from "@/layouts/RootLayout.astro";
import Prose from "@/layouts/Prose.astro";
import { HIDE_SEEDLINGS_PROD, STATE_EMOJI } from "@/constants";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
	const isProd = import.meta.env.PROD;
	const entries = await getCollection("blog");
	return Object.keys(GrowthSchema.enum).map((state) => ({
		params: { growth: state as keyof (typeof GrowthSchema)["enum"] },
		props: {
			entries: entries.filter(
				(entry) =>
					entry.data.growth === state &&
					(isProd && HIDE_SEEDLINGS_PROD ? entry.data.growth !== "seedling" : true)
			),
		},
	}));
}

const { growth } = Astro.params;
const { entries } = Astro.props;
const emoji = STATE_EMOJI[growth];
---

<RootLayout path={`/growths/${growth}`} title={`Growth: ${growth} ${emoji}`}>
	<Prose>
		<h1>Growth: {growth} {emoji}</h1>
		<ul>
			{
				entries.map((entry) => (
					<li>
						<a href={`/posts/${entry.slug}`}>{entry.data.title}</a>
					</li>
				))
			}
		</ul>
	</Prose>
</RootLayout>
